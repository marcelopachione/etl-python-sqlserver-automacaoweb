name: etl-sqlserver

services:
  mssql-etl-sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql-db-etl-sqlserver
    hostname: mssql-db
    restart: no

    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: 'Fiduma@01'
      MSSQL_PID: 'Developer'
      MSSQL_DATA_DIR: '/var/opt/mssql/data'
      MSSQL_TCP_PORT: 1433
    ports:
      - 1433:1433
    volumes:
      - ./sqlserver/data/mssql/backups:/var/opt/mssql/backups
      - ./sqlserver/data/mssql/data:/var/opt/mssql/data
      - ./sqlserver/data/mssql/log:/var/opt/mssql/log
      - ./stage:/tmp
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
# networks:
#   default:
#     name: bridge

  minio-storage-etl-sqlserver:
    image: minio/minio:latest
    container_name: minio-storage-etl-sqlserver
    hostname: minio-storage
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio@123
      MINIO_DOMAIN: storage
      MINIO_REGION_NAME: us-east-1
      MINIO_REGION: us-east-1
    ports:
      - "9000:9000"
      - "9001:9001"
    command: ["server", "/data", "--console-address", ":9001" ]
    volumes:
      - ./minio/minio_data:/data
      - ./stage:/stage
  
  minio-setup-etl-sqlserver:
    image: minio/mc
    container_name: minio-setup-etl-sqlserver
    depends_on:
      - minio-storage-etl-sqlserver
    entrypoint: >
      /bin/sh -c "
      until (echo > /dev/tcp/minio/9000) >/dev/null 2>&1; do
        echo 'Waiting for MinIO...';
        sleep 2;
      done;
      mc alias set myminio http://minio:9000 admin password;
      mc mb myminio/raw;
      mc ls myminio;
      "